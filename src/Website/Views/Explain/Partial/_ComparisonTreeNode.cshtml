@model Website.Models.Explain.ExplainLineDouble
@using Website.Helpers;
@using Website.Models.Explain;

@{
    var guid = Guid.NewGuid();
}

<div class="panel panel-default">
    <div class="card-header" id="heading_@guid.ToString()">
        <h5 class="mb-0">
            @{ 
                var color = "green";
                
                if (Model.ExplainLine1?.Score != Model.ExplainLine2?.Score)
                {
                    color = "red";
                }
            }

            <a class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapse_@guid.ToString()" aria-expanded="false" aria-controls="collapse_@guid.ToString()" style="color:@color">
                <br />
                @if(color == "green")
                {
                    @Model.ExplainLine1.Score

                }
                else
                {
                    if(Model.ExplainLine1 != null && Model.ExplainLine2 != null)
                    {
                        var score1 = Model.ExplainLine1?.Score == null ? 0 : Model.ExplainLine1.Score;
                        var score2 = Model.ExplainLine2?.Score == null ? 0 : Model.ExplainLine2.Score;
                        var difference = Math.Abs(score1 - score2);

                        <span>(diff ~@difference.ToSignificantFigures(3))</span>
                    }


                    if (Model.ExplainLine1 != null)
                    {
                        @Model.ExplainLine1.Score;
                    }

                    if (Model.ExplainLine1 != null && Model.ExplainLine2 != null)
                    {
                        <span>!=</span>
                    }

                    if (Model.ExplainLine2 != null)
                    {
                        @Model.ExplainLine2.Score;
                    }
                }
                    
                @if(Model.ExplainLine1?.FunctionOf == Model.ExplainLine2?.FunctionOf)
                {
                    <i> - @Model.ExplainLine1.FunctionOf:</i>
                }
                else
                {
                    <i> - @Model.ExplainLine1.FunctionOf vs  @Model.ExplainLine2?.FunctionOf</i>
                }
            </a>
        </h5>
    </div>
    <div id="collapse_@guid.ToString()" class="collapse" aria-labelledby="heading_@guid.ToString()">
        <div class="card-body">
            @{
                var totalChildren = 0;
                if (Model.ExplainLine1 != null && Model.ExplainLine1.Children != null && Model.ExplainLine2 != null && Model.ExplainLine2.Children != null)
                {
                    totalChildren = Model.ExplainLine1.Children.Count();
                    if (Model.ExplainLine2.Children.Count() > totalChildren)
                    {
                        totalChildren = Model.ExplainLine2.Children.Count();
                    }
                }
                else if (Model.ExplainLine1 != null && Model.ExplainLine1.Children != null)
                {
                    totalChildren = Model.ExplainLine1.Children.Count();
                }
                else if (Model.ExplainLine2 != null && Model.ExplainLine2.Children != null)
                {
                    totalChildren = Model.ExplainLine2.Children.Count();
                }
                <ul>
                    @{ 
                        for (int i = 0; i < totalChildren; i++)
                        {
                            var model = new ExplainLineDouble();
                            if (Model.ExplainLine1?.Children != null && Model.ExplainLine1.Children.Count() > i)
                            {
                                model.ExplainLine1 = Model.ExplainLine1.Children[i];
                            }

                            if (Model.ExplainLine2?.Children != null && Model.ExplainLine2.Children.Count() > i)
                            {
                                model.ExplainLine2 = Model.ExplainLine2.Children[i];
                            }

                            Html.RenderPartial("_ComparisonTreeNode", model);
                        }
                    }
                </ul>
            }
        </div>
    </div>
</div>